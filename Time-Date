String starttime = "2014-03-27 14:00:00.0";
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
Date start = null;
Calendar calendar = Calendar.getInstance();
int hour= 0,minute= 0,second=0;
try {
  start = sdf.parse(starttime);
  calendar.setTime(start);
  hour = calendar.get(Calendar.HOUR); //returns the hour，以12小时制
  hour2 = calendar.get(Calendar.HOUR_OF_DAY); //returns the hour，以24小时制
  minute = calendar.get(Calendar.MINUTE); //returns the minute
  second = calendar.get(Calendar.SECOND); //returns the second
} catch (ParseException e) {
  e.printStackTrace();
}
System.out.println("解析后是开始时间--->" + start);
System.out.println("解析后的小时是--->" + hour + "解析后的分钟是--->" + minute + "解析后的秒是--->" + second);

Date present = new Date();
if (present.after(start)) {
  System.out.println("present在start之后");
}else {
  System.out.println("present在start之前");
}

输出：
解析后是开始时间--->Thu Mar 27 14:00:00 CST 2014
解析后的小时是--->2解析后的分钟是--->0解析后的秒是--->0
present在start之后




比较时间
Date present = new Date();
if (present.after(start)) {
  System.out.println("present在start之后");
}else {
  System.out.println("present在start之前");
}




//Convert a Date to a String using a format string and to Date reversely

Date present = new Date();
String presentString = DateFormat.getDateInstance().format(present);
DateFormat df = new SimpleDateFormat("HH:mm:ss");
String starttimeString = df.format(starttime);
//starttime是Date类型
presentString = presentString + " " + starttimeString;
log.info("presentString元素的内容是--->" + presentString);
log.info("starttimeString元素的内容是--->" + starttimeString);

SimpleDateFormat lsdStrFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  
Date strD = lsdStrFormat.parse(presentString); 
log.info("strD元素的内容是--->" + strD);
