package com.pdf.txt;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.pdfbox.cos.COSDocument;
import org.apache.pdfbox.io.RandomAccessFile;
import org.apache.pdfbox.pdfparser.PDFParser;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;

public class getEmailFromPdf {

	public static final String folderPath = "C://Users/zanderkong/Desktop/pdf";

	public static void main(String[] args) throws FileNotFoundException {
		PDFParser parser = null;
		PDDocument pdDoc = null;
		COSDocument cosDoc = null;
		PDFTextStripper pdfStripper;

		String parsedText;

		List<String> fileNames = getFileName(folderPath);
		String emailFileName = folderPath + "/emailNames.csv";

		StringBuilder emailNameContent = new StringBuilder();

		for (int i = 0; i < fileNames.size(); i++) {
			String fileName = folderPath + "/" + fileNames.get(i);
			System.out.println("fileName-->" + fileName);

			File file = new File(fileName);

			try {
				parser = new PDFParser(new RandomAccessFile(file, "r"));
				parser.parse();
				cosDoc = parser.getDocument();
				pdfStripper = new PDFTextStripper();
				pdDoc = new PDDocument(cosDoc);
				parsedText = pdfStripper.getText(pdDoc);
				System.out.println(parsedText.replaceAll("[^A-Za-z0-9. ]+", ""));

				Matcher m = Pattern.compile("[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+").matcher(parsedText);
				while (m.find()) {
					System.out.println("匹配的字符串是--->");
					System.out.println(m.group());

					emailNameContent.append(m.group());
					emailNameContent.append(',');
					emailNameContent.append('\n');
				}

			} catch (Exception e) {
				e.printStackTrace();
				try {
					if (cosDoc != null)
						cosDoc.close();
					if (pdDoc != null)
						pdDoc.close();
				} catch (Exception e1) {
					e.printStackTrace();
				}

			}
		}

		writeNamesToCSV(emailFileName, emailNameContent.toString());

	}

	public static List<String> getFileName(String folderPathVar) {

		File folder = new File(folderPathVar);
		File[] listOfFiles = folder.listFiles();

		String csvFileName = folderPathVar + "/fileNames.csv";

		StringBuilder fileNameContent = new StringBuilder();

		List<String> fileNames = new ArrayList<String>();

		for (int i = 0; i < listOfFiles.length; i++) {
			if (listOfFiles[i].isFile()) {

				String fileName = listOfFiles[i].getName();
				int fileSuffixInt = fileName.indexOf(".");
				String fileSuffix = fileName.substring(fileSuffixInt + 1);
				System.out.println("File " + fileSuffix);

				if (fileSuffix.toLowerCase().equals("pdf")) {
					fileNameContent.append(fileName);
					fileNameContent.append(',');
					fileNameContent.append('\n');
					System.out.println("File " + fileName);
					fileNames.add(fileName);
				}

			} else if (listOfFiles[i].isDirectory()) {
				System.out.println("Directory " + listOfFiles[i].getName());
			}
		}
		writeNamesToCSV(csvFileName, fileNameContent.toString());
		return fileNames;
	}

	public static void writeNamesToCSV(String csvName, String content) {

		PrintWriter pw = null;
		try {
			pw = new PrintWriter(new File(csvName));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}

		pw.write(content);
		pw.close();
		System.out.println("done!");

	}
}
